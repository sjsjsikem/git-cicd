name: Build and Push

on:
  push:
     branches: [master]
  pull_request:
      branches: [master]

jobs:
 runsontrivy:
   runs-on: ubuntu-latest

   permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token


   
   steps:
      - name: LS output before
        run: ls
     
      - name: Checkout
        uses: actions/checkout@v4.1.1
      
      - name: LS Output
        run: ls

      - name: Install go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.2

      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/sjsjsikem/git-cicd:${{ github.sha }} .
          
      - name: Run Trivy vulnerability scanner
        id: trivyoutput
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/sjsjsikem/git-cicd:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'


      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_COLOR: '#ff0000'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Failed to scan by trivy"
          SLACK_TITLE: Failed
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_MY }}

      - name: Upload file
        uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path_follow_symbolic_links: false
          file_path: ${{steps.trivyoutput.outputs.output}}
          file_name: 'report.txt'
          title: 'report'
    

      
         
              
            
            
            

